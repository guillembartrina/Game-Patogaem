
#ifndef UTILS_HPP
#define UTILS_HPP

#include <iostream>
#include <string>
#include <set>

#include "SFML/System/Vector2.hpp"

//DEBUG PRINT
//---------------------------------------------------------------------------------------------------------------------//
#define DEBUG_OFF
//----------------------------------------------------//
#ifdef DEBUG_ON
#define printInfo(str) std::cerr << "INFO: " << str << std::endl;
#else
#define printInfo(str) ;
#endif
//---------------------------------------------------------------------------------------------------------------------//

//GLOBAL UTIL VARS
//---------------------------------------------------------------------------------------------------------------------//
static const sf::Vector2f ZEROVECTOR_F = sf::Vector2f(0.f, 0.f);
static const sf::Vector2i ZEROVECTOR_I = sf::Vector2i(0, 0);

static const sf::Vector2f CELLSIZE = sf::Vector2f(64.f, 64.f);
static const sf::Vector2u NUMCELLS = sf::Vector2u(40, 20);

static const std::set<unsigned short> ZEROSET_S = std::set<unsigned short>();

//---------------------------------------------------------------------------------------------------------------------//

static const unsigned short testmap[20][40] = 
{
    {49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153},
    {49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 49153, 49153, 49153, 49153, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 49153, 49153, 49153, 0, 0, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153, 49153, 49153, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 0, 49153, 49153, 49153, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153, 49153, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153, 49153, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 49153, 49153, 49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153, 0, 49153},
    {49153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49153, 49153, 0, 49153},
    {49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153, 49153}
};

static const std::string MovementState_String[5] = { "Standing", "Jumping", "Flying", "Downing", "Flooring"}; 

#endif